{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"What is sunnypilot?","text":"<p>sunnypilot is a fork of comma.ai's openpilot, an open source driver assistance system. sunnypilot offers the user a unique driving experience for over 250+ supported car makes and models with modified behaviors of driving assist engagements. sunnypilot complies with comma.ai's safety rules as accurately as possible.</p>"},{"location":"#how-do-i-use-it","title":"How do I use it?","text":"<p>sunnypilot is designed to be used on the comma 3/3X.</p>"},{"location":"#how-does-it-work","title":"How does it work?","text":"<p>In short, sunnypilot uses the car's existing APIs for the built-in ADAS system and simply provides better acceleration, braking, and steering inputs than the stock system.</p>"},{"location":"SAFETY/","title":"Safety","text":"<p>openpilot is an Adaptive Cruise Control (ACC) and Automated Lane Centering (ALC) system. Like other ACC and ALC systems, openpilot is a failsafe passive system and it requires the driver to be alert and to pay attention at all times.</p> <p>In order to enforce driver alertness, openpilot includes a driver monitoring feature that alerts the driver when distracted.</p> <p>However, even with an attentive driver, we must make further efforts for the system to be safe. We repeat, driver alertness is necessary, but not sufficient, for openpilot to be used safely and openpilot is provided with no warranty of fitness for any purpose.</p> <p>openpilot is developed in good faith to be compliant with FMVSS requirements and to follow industry standards of safety for Level 2 Driver Assistance Systems. In particular, we observe ISO26262 guidelines, including those from pertinent documents released by NHTSA. In addition, we impose strict coding guidelines (like MISRA C : 2012) on parts of openpilot that are safety relevant. We also perform software-in-the-loop, hardware-in-the-loop and in-vehicle tests before each software release.</p> <p>Following Hazard and Risk Analysis and FMEA, at a very high level, we have designed openpilot ensuring two main safety requirements.</p> <ol> <li>The driver must always be capable to immediately retake manual control of the vehicle,    by stepping on the brake pedal or by pressing the cancel button.</li> <li>The vehicle must not alter its trajectory too quickly for the driver to safely    react. This means that while the system is engaged, the actuators are constrained    to operate within reasonable limits<sup>1</sup>. </li> </ol> <p>For additional safety implementation details, refer to panda safety model. For vehicle specific implementation of the safety concept, refer to panda/board/safety/.</p> <p>Extra note: comma.ai strongly discourages the use of openpilot forks with safety code either missing or   not fully meeting the above requirements.</p> <ol> <li> <p>For these actuator limits we observe ISO11270 and ISO15622. Lateral limits described there translate to 0.9 seconds of maximum actuation to achieve a 1m lateral deviation.\u00a0\u21a9</p> </li> </ol>"},{"location":"branches/definitions/","title":"Definitions","text":"Branch Definition Description Stability/Readiness <code>release-c3</code> Release branch Stable release branches. After testing on <code>staging-c3</code>, updates are pushed here and published publicly. Ready to Use: Highly stable, recommended for most users. <code>staging-c3</code> Staging branch Pre-release testing branches. Community feedback is essential to identify issues before public release. Varied Stability: Generally stable, but intended for testing before public release. <code>dev-c3</code> Development branches Experimental branches with the latest features and bug fixes brought in manually. Expect bugs and braking changes. Experimental: Least stable, suitable for testers and developers. <code>master</code> Primary development branch All Pull Requests are merged here for future releases. CI automatically strips, minifies, and pushes changes to <code>staging-c3</code>. Running the <code>master</code> branch is suitable for development purposes but not recommended for non-development use. For Development Use: Suitable for developers, may be unstable for general use. <p>Tip</p> <p>Your feedback is invaluable. Testers, even without software development experience, are encourage to run <code>dev-c3</code> or <code>staging-c3</code> and report issues.</p>"},{"location":"branches/recommended-branches/","title":"Recommended Branches","text":"Branch Compatible Device Installation URL Change Logs <code>release-c3</code> comma 3/3X release-c3.sunnypilot.ai CHANGELOGS.md <code>staging-c3</code> comma 3/3X staging-c3.sunnypilot.ai CHANGELOGS.md <code>dev-c3</code> comma 3/3X dev-c3.sunnypilot.ai CHANGELOGS.md"},{"location":"community/CONTRIBUTING/","title":"How to contribute","text":"<p>Our software is open source so you can solve your own problems without needing help from others. And if you solve a problem and are so kind, you can upstream it for the rest of the world to use. Check out our post about open-sourcing and externalization. Development activity is coordinated through our GitHub Issues, GitHub Discussions, and Discord.</p>"},{"location":"community/CONTRIBUTING/#getting-started","title":"Getting Started","text":"<ul> <li>Setup your development environment</li> <li>Read about the development workflow</li> <li>Join our Discord</li> <li>Docs are at https://docs.sunnypilot.ai and https://www.sunnypilot.ai/blog</li> </ul>"},{"location":"community/CONTRIBUTING/#what-contributions-are-we-looking-for","title":"What contributions are we looking for?","text":"<p>sunnypilot's priorities are safety, stability, quality, and features, in that order. Aligning with comma's ideals, part of sunnypilot's mission is to solve self-driving cars while delivering shippable intermediaries, and all development is towards that goal.</p>"},{"location":"community/CONTRIBUTING/#what-gets-merged","title":"What gets merged?","text":"<p>The probability of a pull request being merged is a function of its value to the project and the effort it will take us to get it merged. If a PR offers some value but will take lots of time to get merged, it will be closed. Simple, well-tested bug fixes are the easiest to merge, and new features are the hardest to get merged. </p> <p>All of these are examples of good PRs:</p> <ul> <li>typo fix</li> <li>removing unused code</li> <li>simple car model port</li> <li>car brand port</li> <li>UI design changes</li> <li>new features</li> </ul>"},{"location":"community/CONTRIBUTING/#what-doesnt-get-merged","title":"What doesn't get merged?","text":"<ul> <li>arbitrary style changes: code is art, and it's up to the author to make it beautiful</li> <li>500+ line PRs: clean it up, break it up into smaller PRs, or both</li> <li>PRs without a clear goal: every PR must have a singular and clear goal</li> </ul>"},{"location":"community/CONTRIBUTING/#first-contribution","title":"First contribution","text":"<p>Check out any good first issue from commaai's openpilot to get started.</p>"},{"location":"community/CONTRIBUTING/#what-do-i-need-to-contribute","title":"What do I need to contribute?","text":"<p>A lot of sunnypilot work requires only a PC, and some requires a comma device. Most car-related contributions require access to that car, plus a comma device installed in the car.</p>"},{"location":"community/CONTRIBUTING/#pull-requests","title":"Pull Requests","text":"<p>Pull requests should be against the <code>master</code> branch. If you're unsure about a contribution, feel free to open a discussion, issue, or draft PR to discuss the problem you're trying to solve.</p> <p>A good pull request has all of the following:</p> <ul> <li>a clearly stated purpose</li> <li>every line changed directly contributes to the stated purpose</li> <li>verification, i.e. how did you test your PR?</li> <li> <p>justification</p> <ul> <li>if you've optimized something, post benchmarks to prove it's better</li> <li>if you've improved your car's tuning, post before and after plots</li> </ul> </li> <li> <p>passes the CI tests</p> </li> </ul>"},{"location":"community/CONTRIBUTING/#contributing-without-code","title":"Contributing without Code","text":"<ul> <li>Report bugs in GitHub issues.</li> <li>Report driving issues in the <code>#general</code> Discord channel.</li> <li>Consider opting into driver camera uploads to improve the driver monitoring model.</li> <li>Connect your device to Wi-Fi regularly, so that comma can pull data for training better driving models.</li> <li>Run the <code>staging-c3</code> branch and report issues. This branch is like <code>master</code> but it's built just like a release.</li> <li>Annotate images in the comma10k dataset.</li> </ul>"},{"location":"community/WORKFLOW/","title":"sunnypilot development workflow","text":"<p>Aside from the ML models, most tools used for sunnypilot development are in this repo.</p> <p>Most development happens on normal Ubuntu workstations, and not in cars or directly on comma devices. See the setup guide for getting your PC setup for sunnypilot development.</p>"},{"location":"community/WORKFLOW/#quick-start","title":"Quick start","text":"<pre><code># get the latest stuff\ngit pull\ngit lfs pull\ngit submodule update --init --recursive\n\n# update dependencies\ntools/ubuntu_setup.sh\n\n# build everything\nscons -j$(nproc)\n\n# build just the ui with either of these\nscons -j8 selfdrive/ui/\ncd selfdrive/ui/ &amp;&amp; scons -u -j8\n\n# test everything\npytest\n\n# test just logging services\ncd system/loggerd &amp;&amp; pytest .\n\n# run the linter\nop lint\n</code></pre>"},{"location":"community/WORKFLOW/#testing","title":"Testing","text":""},{"location":"community/WORKFLOW/#automated-testing","title":"Automated Testing","text":"<p>All PRs and commits are automatically checked by GitHub Actions. Check out <code>.github/workflows/</code> for what GitHub Actions runs. Any new tests should be added to GitHub Actions.</p>"},{"location":"community/WORKFLOW/#code-style-and-linting","title":"Code Style and Linting","text":"<p>Code is automatically checked for style by GitHub Actions as part of the automated tests. You can also run these tests yourself by running <code>pre-commit run --all</code>.</p>"},{"location":"community/reporting-a-bug/","title":"Bug Reports","text":"<p>sunnypilot is an actively maintained project that we constantly strive to improve. With project of this size and complexity, bugs may occur. If you think you have discovered a bug, you can help us by submitting an issue in comma's public issue tracker, sunnypilot's public issue tracker or on our Discord, following this guide.</p>"},{"location":"community/reporting-a-bug/#before-creating-an-issue","title":"Before creating an issue","text":"<p>With more than 2,500 users, issues are created frequently. The maintainers of this project are trying very hard to keep the number of open issues and reports down by fixing bugs as fast as possible. By following this guide, you will know exactly what information we need to help you quickly.</p> <p>But first, please do the following things before creating an issue.</p>"},{"location":"community/reporting-a-bug/#upgrade-to-the-latest-version","title":"Upgrade to the latest version","text":"<p>Chances are that the bug you discovered was already fixed in a subsequent version. Thus, before reporting an issue, ensure that you're running the latest release version of sunnypilot. Please consult our installation guide to learn how to upgrade to the latest version.</p> <p>Bug fixes are not backported</p> <p>Please understand that only bugs that occur in the latest version of sunnypilot will be addressed. Also, to reduce duplicate efforts, fixes cannot be backported to earlier versions.</p>"},{"location":"community/reporting-a-bug/#remove-customizations","title":"Remove customizations","text":"<p>If you're using customized features, such as your own tweaks of the features or themes, please remove them from the branch you are testing from before reporting a bug. We can't offer official support for bugs that might hide in your implementations, so make sure to omit any customizations from the version being tested.</p> <p>If, after removing the customizations, the bug is gone, the bug is likely caused by your customizations. A good idea is to add them back gradually to narrow down the root cause of the problem If you did a major version upgrade, make sure you adjusted all customizations you have implemented. If you are an advanced user, you could also utilize <code>git bisect</code> to perform a binary search in the history to find a particular regression.</p> <p>Customizations mentioned in our documentation</p> <p>A handful of the features sunnypilot offers can only be implemented with customizations. if you find a bug in any of the customizations that our documentations explicitly mentioned, you are, of course, encouraged to report it.</p> <p>Don't be shy to ask on our Discord for help if you run into problems.</p>"},{"location":"community/reporting-a-bug/#search-for-solutions","title":"Search for solutions","text":"<p>At this stage, we know that the problem persists in the latest version and is not caused by any of your customizations. However, the problem might result from a small typo or a syntactical error in the source code, e.g., <code>selfdrive/car/interfaces.py</code>.</p> <p>Now, before you go through the trouble of creating a bug report that is answered and closed right away with a link to the relevant documentation section or another already reported or closed issue or discussion, you can save time for us and yourself by doing some research:</p> <ol> <li>Search our documentation and look for the relevant sections that could be related to your problem. If found, make sure that the settings are configured correctly.</li> <li>Search our Discord to learn if other users are struggling with similar problems and work together with our great comunity towards a solution. Many problems are solved there.</li> <li>Search comma's issue tracker, as another user might already have reported the same problem that may exist in stock openpilot, and there might even be a known workaround or fix for it. Thus, no need to create a new issue.</li> <li>Search sunnypilot's issue tracker, as another user might already have reported the same problem, and there might even be a known workaround or fix for it. Thus, no need to create a new issue.</li> </ol> <p>Keep track of all search terms and relevant links, you'll need them in the bug report.<sup>1</sup></p> <p>At this point, when you still haven't found a solution to your problem, we encourage you to report the issue on our Discord because it's now very likely that you stumbled over something we don't know yet. Read the following section to learn how to create a complete and helpful bug report.</p> <ol> <li> <p>We might be using terminology in our documentation different from yours, but we mean the same. When you include the search terms and related links in your bug report, you help us to adjust and improve the documentation.\u00a0\u21a9</p> </li> </ol>"},{"location":"features/dynamic-lane-profile/","title":"Dynamic Lane Profile (DLP)","text":"<p>Dynamic Lane Profile (DLP) aims to provide the best driving experience by confidently keeping the vehicle within a lane. It allows sunnypilot to dynamically switch between lane profiles based on the lane recognition confidence level on the road.</p> <p>Note</p> <p>Due to the removal of lateral planner in newer Driving Models, Dynamic Lane Profile is only available with the following selected Driving Models.</p> <ul> <li>New Delhi (December 21, 2023) - ND</li> <li>Blue Diamond v2 (December 11, 2023) - BDv2</li> <li>Blue Diamond (November 18, 2023) - BDv1</li> <li>Farmville (November 7, 2023) - FV</li> <li>Night Strike (October 3, 2023) - NS</li> </ul>"},{"location":"features/dynamic-lane-profile/#available-modes","title":"Available Modes","text":"<ul> <li>Auto Lane: sunnypilot dynamically selects between <code>Laneline</code> or <code>Laneless</code> model.</li> <li>Laneline: uses the Laneline model only.</li> <li>Laneless: uses the Laneless model only.</li> </ul>"},{"location":"features/dynamic-lane-profile/#feature-location","title":"Feature Location","text":"<p>1. Settings </p> <p>2. <code>sunnypilot</code> Panel </p> <p>3. Select the desired mode </p>"},{"location":"features/modified-assistive-driving-safety/","title":"Modified Assistive Driving Safety (M.A.D.S.)","text":"<p>Modified Assistive Driving Safety (MADS) aims to elevate the user's driving experience by modifying the behaviors of driving assist engagements.</p> <p>Note</p> <p>This feature aligns closely with comma.ai's safety rules.</p>"},{"location":"features/modified-assistive-driving-safety/#independent-engagement","title":"Independent Engagement","text":"<p>MADS allows users to engage sunnypilot Automatic Lane Centering (ALC) for lateral control and Adaptive Cruise Control (ACC) or Smart Cruise Control (SCC) for longitudinal control independently.</p> Why This Feature Exists <p>While newer car models allow for independent engagement of lateral (steering) and longitudinal (speed) control, many older models and stock openpilot enforce engaging both controls together. MADS introduces this modern convenience to older models, effectively backporting a feature found in newer cars and providing users more flexibility.</p>"},{"location":"features/modified-assistive-driving-safety/#dedicated-buttons","title":"Dedicated Buttons","text":"<p>Toggle for sunnypilot ALC:</p> <ul> <li><code>CRUISE (MAIN)</code> button: Available on all supported cars on sunnypilot.</li> <li><code>LFA</code> button: Available on newer HKG cars.</li> <li><code>LKAS</code> button: Available on Honda, Toyota, and Global Subaru.</li> </ul> <p>Engagement:</p> <ul> <li><code>SET-</code> button: Enables ACC/SCC.</li> <li><code>CANCEL</code> button: Disables ACC/SCC only.</li> <li><code>CRUISE (MAIN)</code> must be <code>ON</code> to use ACC/SCC.</li> </ul> <p>Info</p> <p>The <code>CRUISE (MAIN)</code> button disables sunnypilot completely when <code>OFF</code>. This is strictly enforced in the panda safety code.</p>"},{"location":"features/modified-assistive-driving-safety/#lateral-control-on-brake-pedal","title":"Lateral Control on Brake Pedal","text":"<p>Dedicated toggle to handle Lateral state on brake pedal press and release:</p> <ul> <li>ON: Pressing the <code>BRAKE pedal</code> will pause Automatic Lane Centering.</li> </ul>"},{"location":"getting-started/develop-sunnypilot/","title":"To start developing sunnypilot","text":"<p>sunnypilot is a fork of commaai's openpilot, developed by sunnypilot and by users like you. We welcome both pull requests and issues on GitHub.</p> <ul> <li>Join the community Discord</li> <li>Check out the contributing docs</li> <li>Check out the openpilot tools</li> <li>Read about the development workflow</li> <li>Information about running sunnypilot and code documentation lives on the sunnypilot wiki</li> </ul>"},{"location":"getting-started/use-sunnypilot-in-a-car/","title":"To start using sunnypilot in a car","text":"<p>To use sunnypilot in a car, you need four things:</p> <ol> <li> <p>Supported Device: a comma 3/3X, available at comma.ai/shop.</p> </li> <li> <p>Software: The setup procedure for the comma 3/3X allows users to enter a URL for custom software. Use the URL <code>release-c3.sunnypilot.ai</code> to install the release version.</p> </li> <li> <p>Supported Car: Ensure that you have one of the 275+ supported cars.</p> </li> <li> <p>Car Harness: You will also need a car harness to connect your comma 3/3X to your car.</p> </li> </ol> <p>comma.ai have detailed instructions for how to install the harness and device in a car.</p> <p>Note</p> <p>It's possible to run sunnypilot on other hardware, although it's not plug-and-play.</p>"},{"location":"getting-started/what-is-sunnypilot/","title":"What is sunnypilot?","text":"<p>sunnypilot is a fork of comma.ai's openpilot, an open source driver assistance system. sunnypilot offers the user a unique driving experience for over 250+ supported car makes and models with modified behaviors of driving assist engagements. sunnypilot complies with comma.ai's safety rules as accurately as possible.</p>"},{"location":"getting-started/what-is-sunnypilot/#how-do-i-use-it","title":"How do I use it?","text":"<p>sunnypilot is designed to be used on the comma 3/3X.</p>"},{"location":"getting-started/what-is-sunnypilot/#how-does-it-work","title":"How does it work?","text":"<p>In short, sunnypilot uses the car's existing APIs for the built-in ADAS system and simply provides better acceleration, braking, and steering inputs than the stock system.</p>"},{"location":"how-to/enable-mapbox-navigation/","title":"\ud83d\uddfa Enable Mapbox Navigation","text":"<p>Enabling Mapbox Navigation on your sunnypilot \ud83d\ude97 enhances your driving experience by providing accurate maps and directions. Follow the steps below to set up and enjoy this feature:</p>"},{"location":"how-to/enable-mapbox-navigation/#setup-steps","title":"\ud83d\udee0 Setup Steps","text":"<ol> <li> <p>Create a Free Mapbox Account:    Sign up for a free Mapbox account. Although a credit card is required for verification, you will not be charged for the free tier.</p> </li> <li> <p>Generate Access Tokens:    On the Dashboard, find the Access Tokens section and click <code>Create a Token</code>. Name it as you like and set the scopes to allow everything for both Public and Secret. Copy both keys. \u26a0\ufe0f Remember: You won't be able to access the secret key after this window.</p> </li> <li> <p>Enable Mapbox Navigation on C3:    Go to <code>SP - Visuals</code> on your C3 and toggle <code>Enable Mapbox Navigation*</code>. Accept the reboot prompt.</p> </li> <li> <p>Connect C3 to Network:    Once rebooted, connect your C3 to a network with internet access and note the C3\u2019s IP address.</p> </li> <li> <p>Configure Keys:    In a browser, navigate to <code>C3_IP:8082</code> (e.g., 192.168.1.69:8082). You should see the Comma logo and an input field. Paste your Public token (pk.xx), press enter, paste your Secret key (sk.xx), and press enter again. This page lets you search for destinations.</p> </li> <li> <p>Set Home and Work Addresses:    To set Home and Work addresses, search for a place, select Home/Work from the dropdown, and click Navigate. For other destinations, select Recent Places.</p> </li> <li> <p>Search on C3:    At this time, it is not possible to search directly on the C3.</p> </li> </ol> <p>:::tip TIPS: - If your C3 shows a \"Map Loading\" screen, a reboot via the UI should fix it. - Connect the C3 to your phone's hotspot and use your phone browser to search for places. - In the Navigation panel on the C3, select Home, Work, and Recent Places without needing a browser (assuming internet connection).   :::</p> <p>:::warning IMPORTANT NOTE: Your C3 requires an active internet connection to download map data, generate directions, and update ETA. Once data is downloaded, offline use is possible, but updates (like new directions after a missed turn) won't occur. :::</p> <p>:::info NAVIGATION NOTE: Mapbox does not support alphanumeric addresses (e.g., W123N1234 Main St). There is currently no known workaround for this. :::</p>"},{"location":"how-to/radar-tracks/","title":"\ud83d\udce1 Radar Tracks","text":"<p>Unlock the potential of your sunnypilot \ud83d\ude97 by enabling Radar Tracks manually on applicable cars. Thanks to @greghogan and @pd0wm, this feature is now accessible through SSH.</p> <p>:::info How Radar Points Can Be Used Along With Vision: Current Openpilot policy is to identify with vision first and match it to a radar point. If vision sees nothing, you get a false negative and no lead car detection. (Source: Hubblesphere#7894 from comma.ai community Discord) :::</p>"},{"location":"how-to/radar-tracks/#enable-radar-tracks-experimental","title":"\ud83d\udea8 Enable Radar Tracks (Experimental)","text":"<p>(As of January 1st, 2022) (Applicable to some Hyundai, Kia, and Genesis cars) (Based on version 0.8.12 <code>devel</code>)</p> <p>:::caution USE AT YOUR OWN RISK! Stock system safety features, like AEB and FCW, might be affected by these changes. :::</p>"},{"location":"how-to/radar-tracks/#steps-to-enable-radar-tracks","title":"Steps to Enable Radar Tracks:","text":"<ol> <li> <p>Preparation:    Ensure the car is in the <code>OFF</code> ignition position and connect your compatible comma device (EON, C2, C3) to the car.</p> </li> <li> <p>SSH Connection:    Connect to your comma device via SSH. (Instructions HERE)</p> </li> <li> <p>Execute Commands:    In the SSH terminal, execute the following commands:    <pre><code>pkill -f openpilot\npython /data/openpilot/selfdrive/debug/hyundai_enable_radar_points.py\n</code></pre>    Follow the script instructions and ensure no faults appear.</p> </li> <li> <p>Reboot:    Reboot your comma device and start your car ensuring no faults.</p> </li> <li> <p>Test Drive:    Go for a quick drive, drive behind a lead car, and allow the drive to upload its <code>rlogs</code> in comma Connect.</p> </li> <li> <p>Verify in Cabana:    Open the drive in Cabana from comma Connect, load <code>hyundai_kia_mando_front_radar.dbc</code>, search <code>RADAR_TRACK_50x</code>, and check <code>LONG_DIST</code>.</p> </li> <li> <p>Confirmation:    If the radar tracks data is relevant, you've successfully enabled radar tracks.</p> </li> </ol> <p>:::tip Having issues or need assistance? Reach out to the community in Sunnyhaibin's Openpilot Discord Server or <code>#hyundai-kia-genesis channel</code> on commaai community Discord Server. :::</p>"},{"location":"how-to/turn-the-speed-blue/","title":"Turn the speed blue","text":"<p>A getting started guide for openpilot development</p> <p>In 30 minutes, we'll get an openpilot development environment setup on your computer and make some changes to openpilot's UI.</p> <p>And if you have a comma 3/3X, we'll deploy the change to your device for testing.</p>"},{"location":"how-to/turn-the-speed-blue/#1-setup-your-development-environment","title":"1. Setup your development environment","text":"<p>Run this to clone openpilot and install all the dependencies: <pre><code>curl -fsSL openpilot.comma.ai | bash\n</code></pre></p> <p>Navigate to openpilot folder &amp; activate a Python virtual environment <pre><code>cd openpilot\nsource .venv/bin/activate\n</code></pre></p> <p>Then, compile openpilot: <pre><code>scons -j8\n</code></pre></p>"},{"location":"how-to/turn-the-speed-blue/#2-run-replay","title":"2. Run replay","text":"<p>We'll run the <code>replay</code> tool with the demo route to get data streaming for testing our UI changes. <pre><code># in terminal 1\ntools/replay/replay --demo\n\n# in terminal 2\nselfdrive/ui/ui\n</code></pre></p> <p>The openpilot UI should launch and show a replay of the demo route.</p> <p>If you have your own comma device, you can replace <code>--demo</code> with one of your own routes from comma connect.</p>"},{"location":"how-to/turn-the-speed-blue/#3-make-the-speed-blue","title":"3. Make the speed blue","text":"<p>Search for \u201cmph\u201d with git grep in the <code>ui</code> folder. <pre><code>$ git grep \"mph\" selfdrive/ui/\npaint.cc:  ui_draw_text(s, s-&gt;fb_w/2, 290, s-&gt;scene.is_metric ? \"km/h\" : \"mph\", 36 * 2.5, COLOR_WHITE_ALPHA(200), \"sans-regular\");\n</code></pre></p> <p>The line right above contains the actual speed. Unfortunately, COLOR_BLUE isn\u2019t defined, but a git grep of COLOR_WHITE shows it\u2019s nvgRGBA(255, 255, 255, 255). Personally, I like a lighter blue, so I went with #8080FF. <pre><code>$ git diff\ndiff --git a/selfdrive/ui/paint.cc b/selfdrive/ui/paint.cc\nindex 821d95115..cc996eaa1 100644\n--- a/selfdrive/ui/paint.cc\n+++ b/selfdrive/ui/paint.cc\n@@ -175,8 +175,8 @@ static void ui_draw_vision_speed(UIState *s) {\n   const float speed = std::max(0.0, (*s-&gt;sm)[\"carState\"].getCarState().getVEgo() * (s-&gt;scene.is_metric ? 3.6 : 2.2369363));\n   const std::string speed_str = std::to_string((int)std::nearbyint(speed));\n   nvgTextAlign(s-&gt;vg, NVG_ALIGN_CENTER | NVG_ALIGN_BASELINE);\n-  ui_draw_text(s, s-&gt;fb_w/2, 210, speed_str.c_str(), 96 * 2.5, COLOR_WHITE, \"sans-bold\");\n-  ui_draw_text(s, s-&gt;fb_w/2, 290, s-&gt;scene.is_metric ? \"km/h\" : \"mph\", 36 * 2.5, COLOR_WHITE_ALPHA(200), \"sans-regular\");\n+  ui_draw_text(s, s-&gt;fb_w/2, 210, speed_str.c_str(), 96 * 2.5, nvgRGBA(128, 128, 255, 255), \"sans-bold\");\n+  ui_draw_text(s, s-&gt;fb_w/2, 290, s-&gt;scene.is_metric ? \"km/h\" : \"mph\", 36 * 2.5, nvgRGBA(128, 128, 255, 200), \"sans-regular\");\n }\n\n static void ui_draw_vision_event(UIState *s) {\n</code></pre></p>"},{"location":"how-to/turn-the-speed-blue/#4-rebuild-ui-and-admire-your-work","title":"4. Rebuild UI, and admire your work","text":"<pre><code>scons -j8 &amp;&amp; selfdrive/ui/ui\n</code></pre>"},{"location":"how-to/turn-the-speed-blue/#5-push-your-fork-to-github","title":"5. Push your fork to GitHub","text":"<p>Click fork on GitHub. Then, push with: <pre><code>git remote rm origin\ngit remote add origin git@github.com:&lt;your-github-username&gt;/openpilot.git\ngit add .\ngit commit -m \"Make the speed blue.\"\ngit push --set-upstream origin master\n</code></pre></p>"},{"location":"how-to/turn-the-speed-blue/#6-run-your-fork-on-device-in-your-car","title":"6. Run your fork on device in your car!","text":"<p>Uninstall openpilot from your device through the settings. Then, enter the URL for your very own installer: <pre><code>installer.comma.ai/&lt;your-github-username&gt;/master\n</code></pre></p>"},{"location":"how-to/turn-the-speed-blue/#7-admire-your-work-irl","title":"7. Admire your work IRL","text":""},{"location":"installation/","title":"Installation","text":"<p>Please refer to the Recommended Branches to find your preferred/supported branch. This guide will assume you want to install the latest <code>release-c3</code> branch.</p> <p>You can install sunnypilot on your comma 3/3X using one of the following methods:</p>"},{"location":"installation/#url-method-directly-on-device","title":"URL Method (Directly on Device)","text":"<p>This method allows you to install sunnypilot directly from your device's screen using a provided URL. It's simple and user-friendly, requiring no additional tools or external devices.</p>"},{"location":"installation/#ssh-method-command-line","title":"SSH Method (Command Line)","text":"<p>This method is for advanced users who prefer to use SSH to clone the sunnypilot repository and install it manually via the command line. It offeres greater control over the installation process.</p>"},{"location":"installation/ssh-method/","title":"SSH Method","text":"<p>If you are looking to install sunnypilot via SSH, run the following commands in an SSH terminal after connecting to your comma 3/3X:</p> <p>1. Navigate to <code>data</code> directory <pre><code>cd /data\n</code></pre> 2. Clone sunnypilot</p> <p><code>release-c3</code> branch is used in this step as an example.</p> <p><pre><code>git clone release-c3 --recurse-submodules https://github.com/sunnyhaibin/openpilot.git \n</code></pre> 3. Git LFS <pre><code>git lfs pull\n</code></pre> 4. Reboot <pre><code>sudo reboot\n</code></pre></p>"},{"location":"installation/url-method/","title":"URL Method","text":"<p>The URL installation method can be done in two ways, depending on your current setup and version of sunnypilot on your device.</p> sunnypilot not installed, or sunnypilot &lt; 0.8.17sunnypilot already installed, or sunnypilot \u2265 0.8.17 <ol> <li>Factory reset/uninstall the previous software if you have another software/fork installed.</li> <li>After factory reset/uninstall, upon reboot, select <code>Custom Software</code> when given the option.</li> <li>Input the Installation URL per Recommended Branches.</li> <li>Complete the rest of the installation by following the onscreen instructions.</li> </ol> <p>Recommended Branches</p> Branch Installation URL <code>release-c3</code> release-c3.sunnypilot.ai <code>staging-c3</code> staging-c3.sunnypilot.ai <code>dev-c3</code> dev-c3.sunnypilot.ai <p>Example of Installation URL</p> <p><code>release-c3.sunnypilot.ai</code><sup>1</sup></p> <ol> <li>On the comma 3/3X, go to <code>Settings</code> \u2192 <code>Software</code>.</li> <li>At the <code>Download</code> option, press <code>CHECK</code>. This will fetch the list of latest branches from the sunnypilot repository on GitHub.</li> <li>At the <code>Target Branch</code> option, press <code>SELECT</code> to open the <code>Target Branch</code> selector.</li> <li>Scroll and select the Desired Branch per Recommended Branches.</li> </ol> <p>Recommended Branches</p> Branch Installation URL <code>release-c3</code> release-c3.sunnypilot.ai <code>staging-c3</code> staging-c3.sunnypilot.ai <code>dev-c3</code> dev-c3.sunnypilot.ai <p>Example of Desired Branch</p> <p><code>release-c3</code></p> <ol> <li> <p>Shortened URL for convenience. Full URL is <code>smiskol.com/fork/sunnyhaibin/release-c3</code>.\u00a0\u21a9</p> </li> </ol>"},{"location":"safety-information/prohibited-safety-modifications/","title":"Prohibited Safety Modifications","text":"<p>All official sunnypilot branches strictly adhere to comma.ai's safety policy. Any changes that go against this policy will result in your fork and your device being banned from both comma.ai and sunnypilot channels.</p> <p>The following changes are VIOLATIONS of the safety policy and ARE NOT supported in any official sunnypilot branches:</p> <p>Driver Monitoring</p> <ul> <li>\"Nerfing\" or reducing monitoring parameters.</li> </ul> <p>Panda Safety</p> <ul> <li>No preventing disengaging of longitudinal control (positive/negative acceleration) on brake pedal press.</li> <li>No auto re-engaging of longitudinal control (positive/negative acceleration) on brake pedal release.</li> <li>No disengaging on <code>CRUISE MAIN</code> in <code>OFF</code> state.</li> </ul>"},{"location":"safety-information/read-before-installing/","title":"\ud83d\udea8 Read Before Installing \ud83d\udea8","text":"<p>It is recommended to read the entire wiki before proceeding. This will ensure that you fully understand each added feature in sunnypilot. This also ensures that you are choosing the correct settings and branch for your car to have the best driving experience.</p> <p>Warning</p> <p>By installing this software, you accept all responsibility for anything that might occur while you use it. sunnypilot and all contributors to sunnypilot are not liable.</p> <p>Use at your own risk.</p>"}]}